// Generated from e:\code\Impmon\Impmon.g4 by ANTLR 4.7
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ImpmonLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, IDENTIFIER=52, 
		INTEGER=53, CHARACTER=54, STRING=55, BASETYPE=56, SKIP_TOKEN=57, LINE_COMMENT=58, 
		BLOCK_COMMENT=59;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "IDENTIFIER", "INTEGER", "CHARACTER", "STRING", "BASETYPE", 
		"SKIP_TOKEN", "LINE_COMMENT", "BLOCK_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'import'", "'.'", "';'", "'('", "')'", "'='", "','", "'const'", 
		"'struct'", "'union'", "'typedef'", "':'", "'if'", "'else'", "'while'", 
		"'for'", "'switch'", "'case'", "'default'", "'break'", "'continue'", "'goto'", 
		"'return'", "'print'", "'+='", "'-='", "'*='", "'/='", "'*'", "'/'", "'+'", 
		"'-'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'&&'", "'||'", "'++'", 
		"'--'", "'['", "']'", "'static'", "'void'", "'char'", "'int'", "'...'", 
		"'{'", "'}'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "IDENTIFIER", "INTEGER", "CHARACTER", "STRING", 
		"BASETYPE", "SKIP_TOKEN", "LINE_COMMENT", "BLOCK_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ImpmonLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Impmon.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=\u01b2\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3"+
		"\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3"+
		" \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3("+
		"\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3/"+
		"\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62"+
		"\3\62\3\63\3\63\3\64\3\64\3\65\5\65\u0143\n\65\3\65\7\65\u0146\n\65\f"+
		"\65\16\65\u0149\13\65\3\66\3\66\7\66\u014d\n\66\f\66\16\66\u0150\13\66"+
		"\3\66\5\66\u0153\n\66\3\66\5\66\u0156\n\66\3\66\3\66\3\66\6\66\u015b\n"+
		"\66\r\66\16\66\u015c\3\66\5\66\u0160\n\66\3\66\5\66\u0163\n\66\3\66\3"+
		"\66\7\66\u0167\n\66\f\66\16\66\u016a\13\66\3\66\5\66\u016d\n\66\3\66\5"+
		"\66\u0170\n\66\5\66\u0172\n\66\3\67\3\67\7\67\u0176\n\67\f\67\16\67\u0179"+
		"\13\67\3\67\3\67\38\38\78\u017f\n8\f8\168\u0182\138\38\38\39\39\39\39"+
		"\39\39\39\39\39\39\39\59\u0191\n9\3:\6:\u0194\n:\r:\16:\u0195\3:\3:\3"+
		";\3;\3;\3;\7;\u019e\n;\f;\16;\u01a1\13;\3;\3;\3<\3<\3<\3<\7<\u01a9\n<"+
		"\f<\16<\u01ac\13<\3<\3<\3<\3<\3<\3\u01aa\2=\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=\3\2\13\5\2C\\aac"+
		"|\6\2\62;C\\aac|\3\2\63;\3\2\62;\4\2ZZzz\5\2\62;CHch\3\2\629\4\2\f\f\17"+
		"\17\5\2\13\f\16\17\"\"\2\u01c4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t"+
		"\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2"+
		"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2"+
		"\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2"+
		"+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2"+
		"\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2"+
		"C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3"+
		"\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2"+
		"\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2"+
		"i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3"+
		"\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5\u0080\3\2\2\2\7\u0082\3\2\2\2\t\u0084\3"+
		"\2\2\2\13\u0086\3\2\2\2\r\u0088\3\2\2\2\17\u008a\3\2\2\2\21\u008c\3\2"+
		"\2\2\23\u0092\3\2\2\2\25\u0099\3\2\2\2\27\u009f\3\2\2\2\31\u00a7\3\2\2"+
		"\2\33\u00a9\3\2\2\2\35\u00ac\3\2\2\2\37\u00b1\3\2\2\2!\u00b7\3\2\2\2#"+
		"\u00bb\3\2\2\2%\u00c2\3\2\2\2\'\u00c7\3\2\2\2)\u00cf\3\2\2\2+\u00d5\3"+
		"\2\2\2-\u00de\3\2\2\2/\u00e3\3\2\2\2\61\u00ea\3\2\2\2\63\u00f0\3\2\2\2"+
		"\65\u00f3\3\2\2\2\67\u00f6\3\2\2\29\u00f9\3\2\2\2;\u00fc\3\2\2\2=\u00fe"+
		"\3\2\2\2?\u0100\3\2\2\2A\u0102\3\2\2\2C\u0104\3\2\2\2E\u0106\3\2\2\2G"+
		"\u0108\3\2\2\2I\u010b\3\2\2\2K\u010e\3\2\2\2M\u0111\3\2\2\2O\u0114\3\2"+
		"\2\2Q\u0117\3\2\2\2S\u011a\3\2\2\2U\u011d\3\2\2\2W\u0120\3\2\2\2Y\u0122"+
		"\3\2\2\2[\u0124\3\2\2\2]\u012b\3\2\2\2_\u0130\3\2\2\2a\u0135\3\2\2\2c"+
		"\u0139\3\2\2\2e\u013d\3\2\2\2g\u013f\3\2\2\2i\u0142\3\2\2\2k\u0171\3\2"+
		"\2\2m\u0173\3\2\2\2o\u017c\3\2\2\2q\u0190\3\2\2\2s\u0193\3\2\2\2u\u0199"+
		"\3\2\2\2w\u01a4\3\2\2\2yz\7k\2\2z{\7o\2\2{|\7r\2\2|}\7q\2\2}~\7t\2\2~"+
		"\177\7v\2\2\177\4\3\2\2\2\u0080\u0081\7\60\2\2\u0081\6\3\2\2\2\u0082\u0083"+
		"\7=\2\2\u0083\b\3\2\2\2\u0084\u0085\7*\2\2\u0085\n\3\2\2\2\u0086\u0087"+
		"\7+\2\2\u0087\f\3\2\2\2\u0088\u0089\7?\2\2\u0089\16\3\2\2\2\u008a\u008b"+
		"\7.\2\2\u008b\20\3\2\2\2\u008c\u008d\7e\2\2\u008d\u008e\7q\2\2\u008e\u008f"+
		"\7p\2\2\u008f\u0090\7u\2\2\u0090\u0091\7v\2\2\u0091\22\3\2\2\2\u0092\u0093"+
		"\7u\2\2\u0093\u0094\7v\2\2\u0094\u0095\7t\2\2\u0095\u0096\7w\2\2\u0096"+
		"\u0097\7e\2\2\u0097\u0098\7v\2\2\u0098\24\3\2\2\2\u0099\u009a\7w\2\2\u009a"+
		"\u009b\7p\2\2\u009b\u009c\7k\2\2\u009c\u009d\7q\2\2\u009d\u009e\7p\2\2"+
		"\u009e\26\3\2\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7{\2\2\u00a1\u00a2\7"+
		"r\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6"+
		"\7h\2\2\u00a6\30\3\2\2\2\u00a7\u00a8\7<\2\2\u00a8\32\3\2\2\2\u00a9\u00aa"+
		"\7k\2\2\u00aa\u00ab\7h\2\2\u00ab\34\3\2\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae"+
		"\7n\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7g\2\2\u00b0\36\3\2\2\2\u00b1\u00b2"+
		"\7y\2\2\u00b2\u00b3\7j\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7n\2\2\u00b5"+
		"\u00b6\7g\2\2\u00b6 \3\2\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9\7q\2\2\u00b9"+
		"\u00ba\7t\2\2\u00ba\"\3\2\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd\7y\2\2\u00bd"+
		"\u00be\7k\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7e\2\2\u00c0\u00c1\7j\2\2"+
		"\u00c1$\3\2\2\2\u00c2\u00c3\7e\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5\7u\2"+
		"\2\u00c5\u00c6\7g\2\2\u00c6&\3\2\2\2\u00c7\u00c8\7f\2\2\u00c8\u00c9\7"+
		"g\2\2\u00c9\u00ca\7h\2\2\u00ca\u00cb\7c\2\2\u00cb\u00cc\7w\2\2\u00cc\u00cd"+
		"\7n\2\2\u00cd\u00ce\7v\2\2\u00ce(\3\2\2\2\u00cf\u00d0\7d\2\2\u00d0\u00d1"+
		"\7t\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7m\2\2\u00d4"+
		"*\3\2\2\2\u00d5\u00d6\7e\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7p\2\2\u00d8"+
		"\u00d9\7v\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7w\2\2"+
		"\u00dc\u00dd\7g\2\2\u00dd,\3\2\2\2\u00de\u00df\7i\2\2\u00df\u00e0\7q\2"+
		"\2\u00e0\u00e1\7v\2\2\u00e1\u00e2\7q\2\2\u00e2.\3\2\2\2\u00e3\u00e4\7"+
		"t\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7v\2\2\u00e6\u00e7\7w\2\2\u00e7\u00e8"+
		"\7t\2\2\u00e8\u00e9\7p\2\2\u00e9\60\3\2\2\2\u00ea\u00eb\7r\2\2\u00eb\u00ec"+
		"\7t\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7v\2\2\u00ef"+
		"\62\3\2\2\2\u00f0\u00f1\7-\2\2\u00f1\u00f2\7?\2\2\u00f2\64\3\2\2\2\u00f3"+
		"\u00f4\7/\2\2\u00f4\u00f5\7?\2\2\u00f5\66\3\2\2\2\u00f6\u00f7\7,\2\2\u00f7"+
		"\u00f8\7?\2\2\u00f88\3\2\2\2\u00f9\u00fa\7\61\2\2\u00fa\u00fb\7?\2\2\u00fb"+
		":\3\2\2\2\u00fc\u00fd\7,\2\2\u00fd<\3\2\2\2\u00fe\u00ff\7\61\2\2\u00ff"+
		">\3\2\2\2\u0100\u0101\7-\2\2\u0101@\3\2\2\2\u0102\u0103\7/\2\2\u0103B"+
		"\3\2\2\2\u0104\u0105\7@\2\2\u0105D\3\2\2\2\u0106\u0107\7>\2\2\u0107F\3"+
		"\2\2\2\u0108\u0109\7@\2\2\u0109\u010a\7?\2\2\u010aH\3\2\2\2\u010b\u010c"+
		"\7>\2\2\u010c\u010d\7?\2\2\u010dJ\3\2\2\2\u010e\u010f\7?\2\2\u010f\u0110"+
		"\7?\2\2\u0110L\3\2\2\2\u0111\u0112\7#\2\2\u0112\u0113\7?\2\2\u0113N\3"+
		"\2\2\2\u0114\u0115\7(\2\2\u0115\u0116\7(\2\2\u0116P\3\2\2\2\u0117\u0118"+
		"\7~\2\2\u0118\u0119\7~\2\2\u0119R\3\2\2\2\u011a\u011b\7-\2\2\u011b\u011c"+
		"\7-\2\2\u011cT\3\2\2\2\u011d\u011e\7/\2\2\u011e\u011f\7/\2\2\u011fV\3"+
		"\2\2\2\u0120\u0121\7]\2\2\u0121X\3\2\2\2\u0122\u0123\7_\2\2\u0123Z\3\2"+
		"\2\2\u0124\u0125\7u\2\2\u0125\u0126\7v\2\2\u0126\u0127\7c\2\2\u0127\u0128"+
		"\7v\2\2\u0128\u0129\7k\2\2\u0129\u012a\7e\2\2\u012a\\\3\2\2\2\u012b\u012c"+
		"\7x\2\2\u012c\u012d\7q\2\2\u012d\u012e\7k\2\2\u012e\u012f\7f\2\2\u012f"+
		"^\3\2\2\2\u0130\u0131\7e\2\2\u0131\u0132\7j\2\2\u0132\u0133\7c\2\2\u0133"+
		"\u0134\7t\2\2\u0134`\3\2\2\2\u0135\u0136\7k\2\2\u0136\u0137\7p\2\2\u0137"+
		"\u0138\7v\2\2\u0138b\3\2\2\2\u0139\u013a\7\60\2\2\u013a\u013b\7\60\2\2"+
		"\u013b\u013c\7\60\2\2\u013cd\3\2\2\2\u013d\u013e\7}\2\2\u013ef\3\2\2\2"+
		"\u013f\u0140\7\177\2\2\u0140h\3\2\2\2\u0141\u0143\t\2\2\2\u0142\u0141"+
		"\3\2\2\2\u0143\u0147\3\2\2\2\u0144\u0146\t\3\2\2\u0145\u0144\3\2\2\2\u0146"+
		"\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148j\3\2\2\2"+
		"\u0149\u0147\3\2\2\2\u014a\u014e\t\4\2\2\u014b\u014d\t\5\2\2\u014c\u014b"+
		"\3\2\2\2\u014d\u0150\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f"+
		"\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0151\u0153\7W\2\2\u0152\u0151\3\2"+
		"\2\2\u0152\u0153\3\2\2\2\u0153\u0155\3\2\2\2\u0154\u0156\7N\2\2\u0155"+
		"\u0154\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0172\3\2\2\2\u0157\u0158\7\62"+
		"\2\2\u0158\u015a\t\6\2\2\u0159\u015b\t\7\2\2\u015a\u0159\3\2\2\2\u015b"+
		"\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3\2"+
		"\2\2\u015e\u0160\7W\2\2\u015f\u015e\3\2\2\2\u015f\u0160\3\2\2\2\u0160"+
		"\u0162\3\2\2\2\u0161\u0163\7N\2\2\u0162\u0161\3\2\2\2\u0162\u0163\3\2"+
		"\2\2\u0163\u0172\3\2\2\2\u0164\u0168\7\62\2\2\u0165\u0167\t\b\2\2\u0166"+
		"\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2"+
		"\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016d\7W\2\2\u016c"+
		"\u016b\3\2\2\2\u016c\u016d\3\2\2\2\u016d\u016f\3\2\2\2\u016e\u0170\7N"+
		"\2\2\u016f\u016e\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0172\3\2\2\2\u0171"+
		"\u014a\3\2\2\2\u0171\u0157\3\2\2\2\u0171\u0164\3\2\2\2\u0172l\3\2\2\2"+
		"\u0173\u0177\7)\2\2\u0174\u0176\n\t\2\2\u0175\u0174\3\2\2\2\u0176\u0179"+
		"\3\2\2\2\u0177\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u017a\3\2\2\2\u0179"+
		"\u0177\3\2\2\2\u017a\u017b\7)\2\2\u017bn\3\2\2\2\u017c\u0180\7$\2\2\u017d"+
		"\u017f\n\t\2\2\u017e\u017d\3\2\2\2\u017f\u0182\3\2\2\2\u0180\u017e\3\2"+
		"\2\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0180\3\2\2\2\u0183"+
		"\u0184\7$\2\2\u0184p\3\2\2\2\u0185\u0186\7x\2\2\u0186\u0187\7q\2\2\u0187"+
		"\u0188\7k\2\2\u0188\u0191\7f\2\2\u0189\u018a\7k\2\2\u018a\u018b\7p\2\2"+
		"\u018b\u0191\7v\2\2\u018c\u018d\7e\2\2\u018d\u018e\7j\2\2\u018e\u018f"+
		"\7c\2\2\u018f\u0191\7t\2\2\u0190\u0185\3\2\2\2\u0190\u0189\3\2\2\2\u0190"+
		"\u018c\3\2\2\2\u0191r\3\2\2\2\u0192\u0194\t\n\2\2\u0193\u0192\3\2\2\2"+
		"\u0194\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0197"+
		"\3\2\2\2\u0197\u0198\b:\2\2\u0198t\3\2\2\2\u0199\u019a\7\61\2\2\u019a"+
		"\u019b\7\61\2\2\u019b\u019f\3\2\2\2\u019c\u019e\n\t\2\2\u019d\u019c\3"+
		"\2\2\2\u019e\u01a1\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0"+
		"\u01a2\3\2\2\2\u01a1\u019f\3\2\2\2\u01a2\u01a3\b;\2\2\u01a3v\3\2\2\2\u01a4"+
		"\u01a5\7\61\2\2\u01a5\u01a6\7,\2\2\u01a6\u01aa\3\2\2\2\u01a7\u01a9\13"+
		"\2\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa\u01ab\3\2\2\2\u01aa"+
		"\u01a8\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ad\u01ae\7,"+
		"\2\2\u01ae\u01af\7\61\2\2\u01af\u01b0\3\2\2\2\u01b0\u01b1\b<\2\2\u01b1"+
		"x\3\2\2\2\27\2\u0142\u0145\u0147\u014e\u0152\u0155\u015a\u015c\u015f\u0162"+
		"\u0168\u016c\u016f\u0171\u0177\u0180\u0190\u0195\u019f\u01aa\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}